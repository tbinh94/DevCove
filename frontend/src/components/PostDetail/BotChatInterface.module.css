/* BotChatInterface.module.css */

/* Define color variables for dark theme */
:root {
  --primary-dark-bg: #1a202c;
  --secondary-dark-bg: #2d3748;
  --text-primary: #edf2f7;
  --text-secondary: #a0aec0;
  --border-color: #4a5568;
  --accent-purple: #9f7aea;
  --bot-message-bg: #4a5568;
  --scrollbar-thumb: #4a5568;
  --scrollbar-thumb-hover: #718096;
}

/* Animation for fade-in effect */
@keyframes fadeIn {
  from { opacity: 0; transform: translateY(10px); }
  to { opacity: 1; transform: translateY(0); }
}

.animate-fadeIn {
  animation: fadeIn 0.3s ease-out;
}

/* Modal Overlay */
.modalOverlay {
  position: fixed;
  inset: 0;
  z-index: 1000;
  background: rgba(0, 0, 0, 0.6);
  backdrop-filter: blur(5px);
  display: flex;
  align-items: center;
  justify-content: center;
  animation: fadeIn 0.3s ease-out;
}

/* Modal for minimized state */
.minimizedOverlay {
  align-items: flex-end; /* Align to bottom */
  justify-content: flex-end; /* Align to right */
  padding: 20px; /* Add some padding from the corner */
  background: transparent; /* Make background transparent when minimized */
  backdrop-filter: none; /* No blur when minimized */
}

/* Chat Container */
.chatContainer {
  background-color: var(--primary-dark-bg);
  border-radius: 10px;
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
  display: flex;
  flex-direction: column;
  overflow: hidden;
  position: relative;
  transition: all 0.3s ease-out; /* Smooth transition for minimize/maximize */
}

.maximizedChatContainer {
  width: 90%;
  max-width: 600px;
  height: 90%;
  max-height: 700px;
}

.minimizedChatContainer {
  width: 200px; /* Smaller width for minimized */
  height: 50px; /* Smaller height for minimized */
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2); /* Lighter shadow */
}

/* Minimized Header */
.minimizedHeader {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 12px;
  background-color: var(--secondary-dark-bg);
  color: var(--text-primary);
  font-weight: bold;
  cursor: pointer;
  border-radius: 10px; /* Full border-radius when minimized */
  width: 100%;
  height: 100%;
}

.minimizedHeader span {
  flex-grow: 1;
  text-align: center;
}

.minimizeMaximizeIcon {
  margin-left: 8px;
  color: var(--text-secondary);
}

/* Chat Header */
.chatHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem;
  background-color: var(--secondary-dark-bg);
  border-bottom: 1px solid var(--border-color);
  color: var(--text-primary);
}

.chatTitle {
  display: flex;
  align-items: center;
  font-weight: 600;
  font-size: 1.125rem;
}

.headerActions .iconButton {
  background: none;
  border: none;
  color: var(--text-secondary);
  cursor: pointer;
  padding: 0.5rem;
  margin-left: 0.5rem;
  border-radius: 5px;
  transition: background-color 0.2s ease;
}

.headerActions .iconButton:hover {
  background-color: rgba(255, 255, 255, 0.1);
}

/* Chat Body */
.chatBody {
  flex-grow: 1;
  padding: 1rem;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  scroll-behavior: smooth;
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */
}

.chatBody::-webkit-scrollbar {
  display: none; /* Chrome, Safari, Opera */
}

.messagesContainer {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

/* Quick Options */
.quickOptionsContainer {
  padding: 1rem;
  background-color: var(--secondary-dark-bg);
  border-radius: 10px;
  margin-top: auto; /* Push to bottom when present */
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

.quickOptionsHeader {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin-bottom: 1rem;
  color: var(--text-primary);
}

.quickOptionsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); /* Adjusted for better responsiveness */
  gap: 0.75rem;
}

/* NEW: Styles for quick option group titles */
.quickOptionGroupTitle {
  grid-column: 1 / -1; /* Span across all columns */
  font-weight: bold;
  color: var(--accent-purple); /* Or another distinct color */
  margin-top: 1rem;
  margin-bottom: 0.5rem;
  padding-bottom: 0.3rem;
  border-bottom: 1px dashed var(--border-color);
  font-size: 0.95rem;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.quickOptionGroupTitle:first-of-type {
  margin-top: 0; /* No top margin for the very first group */
}

.quickOptionButton {
  background-color: rgba(159, 122, 234, 0.1); /* Light purple background */
  border: 1px solid var(--accent-purple);
  border-radius: 8px;
  padding: 0.75rem 1rem;
  cursor: pointer;
  display: flex;
  align-items: center;
  gap: 0.75rem;
  text-align: left;
  transition: background-color 0.2s ease, transform 0.1s ease;
}

.quickOptionButton:hover {
  background-color: rgba(159, 122, 234, 0.2);
  transform: translateY(-2px);
}

.quickOptionButton:active {
  transform: translateY(0);
}

.quickOptionIcon {
  color: var(--accent-purple);
}

.quickOptionText {
  display: flex;
  flex-direction: column;
}

.quickOptionTitle {
  font-weight: 600;
  color: var(--text-primary);
  font-size: 0.9rem; /* Slightly smaller for compactness */
}

.quickOptionDesc {
  font-size: 0.75rem; /* Smaller description */
  color: var(--text-secondary);
}

/* Message Bubbles */
.messageWrapper {
  display: flex;
  align-items: flex-start;
  gap: 0.75rem;
}

.botWrapper {
  justify-content: flex-start;
}

.userWrapper {
  justify-content: flex-end;
}

.botAvatar {
  flex-shrink: 0;
  width: 28px;
  height: 28px;
  background-color: var(--accent-purple);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  margin-top: 5px; /* Align with text better */
}

.messageBubble {
  max-width: 80%;
  padding: 0.75rem 1rem;
  border-radius: 1rem;
  font-size: 0.9rem;
  line-height: 1.5;
}

.botMessage {
  background-color: var(--bot-message-bg);
  color: var(--text-primary);
  border-bottom-left-radius: 0.375rem; /* Pointy corner */
}

.userMessage {
  background: linear-gradient(to right, #4f46e5, #7c3aed); /* Blue to purple gradient */
  color: white;
  border-bottom-right-radius: 0.375rem; /* Pointy corner */
}

.timestamp {
  font-size: 0.7rem;
  margin-top: 0.5rem;
  color: var(--text-secondary);
  text-align: right; /* Align timestamp to right for user messages */
}

.userWrapper .timestamp {
  text-align: right;
}

.botWrapper .timestamp {
  text-align: left;
}

/* Loading Message */
.loadingMessage {
  display: flex;
  align-items: center;
  gap: 5px;
}

.loadingDots span {
  animation: bounce 1s infinite;
  display: inline-block;
}

.loadingDots span:nth-child(2) { animation-delay: 0.2s; }
.loadingDots span:nth-child(3) { animation-delay: 0.4s; }

@keyframes bounce {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-5px); }
}

/* Error Message */
.errorMessage {
  background-color: #ef4444; /* Red-500 */
  color: white;
  border: 1px solid #dc2626; /* Red-600 */
  border-bottom-left-radius: 0.375rem;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

.errorHeader {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin-bottom: 0.5rem;
  font-weight: 600;
}

.errorTitle {
  font-size: 1rem;
}

.errorText {
  font-size: 0.85rem;
}


/* Input Area */
.inputAreaContainer {
  padding: 1rem;
  border-top: 1px solid var(--border-color);
  background-color: var(--secondary-dark-bg);
  border-bottom-left-radius: 10px;
  border-bottom-right-radius: 10px;
}

.inputForm {
  display: flex;
  align-items: flex-end; /* Align textarea and button at the bottom */
  gap: 0.75rem;
}

.textarea {
  flex-grow: 1;
  background-color: var(--primary-dark-bg);
  border: 1px solid var(--border-color);
  border-radius: 8px;
  padding: 0.75rem 1rem;
  color: var(--text-primary);
  font-size: 0.9rem;
  resize: none; /* Disable manual resize */
  min-height: 40px; /* Minimum height for textarea */
  max-height: 150px; /* Max height to prevent it from growing too large */
  overflow-y: auto; /* Enable scrolling when content exceeds max-height */
}

.textarea:focus {
  outline: none;
  border-color: var(--accent-purple);
  box-shadow: 0 0 0 2px rgba(159, 122, 234, 0.3);
}

.sendButton {
  background-color: var(--accent-purple);
  color: white;
  border: none;
  border-radius: 8px;
  padding: 0.75rem 1rem;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: background-color 0.2s ease, transform 0.1s ease;
  min-width: 40px; /* Ensure button doesn't shrink too much */
  min-height: 40px;
}

.sendButton:hover:not(:disabled) {
  background-color: #8c6fe7; /* Slightly darker purple */
}

.sendButton:disabled {
  background-color: #5a4b7e; /* Greyed out when disabled */
  cursor: not-allowed;
  opacity: 0.7;
}

/* Loading spinner for button */
.loadingSpinner {
  width: 18px;
  height: 18px;
  border: 2px solid white;
  border-radius: 50%;
  border-right-color: transparent;
  animation: spin 1s linear infinite;
}
.inputFormActions {
  display: flex;
  align-items: center;
  gap: 8px;
}

.optionsButton {
  background: none;
  border: none;
  cursor: pointer;
  color: #ffffff;
  padding: 8px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.optionsButton:hover {
  color: #cccccc;
}
@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}


/* Toggle chatbot comment */
.messageBubble.botMessage {
  position: relative; /* Để vị trí của nút toggle được chuẩn xác */
  padding-right: 35px; /* Tạo không gian cho nút toggle */
}

.botMessageContent {
  /* Có thể thêm transition cho hiệu ứng ẩn/hiện */
  transition: opacity 0.3s ease-in-out, max-height 0.3s ease-in-out;
  overflow: hidden; /* Đảm bảo nội dung không tràn ra ngoài khi ẩn */
}

.toggleCommentButton {
  position: absolute;
  top: 8px; /* Điều chỉnh vị trí theo ý muốn */
  right: 8px; /* Điều chỉnh vị trí theo ý muốn */
  background: none;
  border: none;
  cursor: pointer;
  color: var(--text-color-secondary); /* Hoặc màu phù hợp với theme của bạn */
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 4px;
  border-radius: var(--border-radius-sm);
  transition: background-color 0.2s ease;
}

.toggleCommentButton:hover {
  background-color: var(--hover-color); /* Màu nền khi hover */
}